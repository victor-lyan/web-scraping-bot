buildscript {
    ext.kotlin_version = '1.3.61'
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'com.bmuschko.docker-remote-api' version '6.2.0'
}

group 'com.wictor-lyan'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.wictorlyan.webscrapingbot.MainKt'
    }

    from {
        configurations.runtimeClasspath.collect {it.isDirectory() ? it : zipTree(it)} 
    }
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'io.github.kotlin-telegram-bot.kotlin-telegram-bot:telegram:4.5.0'
    implementation 'com.vdurmont:emoji-java:5.1.1'
    implementation 'redis.clients:jedis:3.2.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

import com.bmuschko.gradle.docker.tasks.image.*

def dockerBuildDir = 'build/docker/'

task createDockerfile(type: Dockerfile) {
    from 'openjdk:8-jre-alpine'
    copyFile jar.archiveFileName.get(), '/app/web-scraping-bot.jar'
    entryPoint 'sh', '-c', 'java -jar /app/web-scraping-bot.jar $TELEGRAM_TOKEN'
    exposePort 8080
}

task syncJar(type: Copy) {
    dependsOn build
    from jar.archiveFile
    into dockerBuildDir
}

task removeOldImage(type: DockerRemoveImage) {
    force.set(true)
    targetImageId('wictorlyan/web-scraping-bot')
    onError {exception ->
        println exception.message
    }
}

task buildDockerImage(type: DockerBuildImage) {
    dependsOn removeOldImage, syncJar, createDockerfile
    images.add('wictorlyan/web-scraping-bot:latest')
}

task pushDockerImage(type: DockerPushImage) {
    dependsOn buildDockerImage
    images.add('wictorlyan/web-scraping-bot:latest')
    registryCredentials.username.set(dockerHubUser)
    registryCredentials.password.set(dockerHubPassword)
}